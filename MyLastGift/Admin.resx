<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>